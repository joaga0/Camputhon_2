"use strict";

var _interopRequireWildcard = require("@babel/runtime-corejs3/helpers/interopRequireWildcard");

var _interopRequireDefault = require("@babel/runtime-corejs3/helpers/interopRequireDefault");

var _Object$defineProperty2 = require("@babel/runtime-corejs3/core-js-stable/object/define-property");

_Object$defineProperty2(exports, "__esModule", {
  value: true
});

exports.default = CustomOverlay;

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime-corejs3/core-js-stable/object/define-property"));

var _defineProperties = _interopRequireDefault(require("@babel/runtime-corejs3/core-js-stable/object/define-properties"));

var _getOwnPropertyDescriptors = _interopRequireDefault(require("@babel/runtime-corejs3/core-js-stable/object/get-own-property-descriptors"));

var _forEach = _interopRequireDefault(require("@babel/runtime-corejs3/core-js-stable/instance/for-each"));

var _getOwnPropertyDescriptor = _interopRequireDefault(require("@babel/runtime-corejs3/core-js-stable/object/get-own-property-descriptor"));

var _filter = _interopRequireDefault(require("@babel/runtime-corejs3/core-js-stable/instance/filter"));

var _getOwnPropertySymbols = _interopRequireDefault(require("@babel/runtime-corejs3/core-js-stable/object/get-own-property-symbols"));

var _keys = _interopRequireDefault(require("@babel/runtime-corejs3/core-js-stable/object/keys"));

var _defineProperty3 = _interopRequireDefault(require("@babel/runtime-corejs3/helpers/defineProperty"));

var _extends2 = _interopRequireDefault(require("@babel/runtime-corejs3/helpers/extends"));

var _map = _interopRequireDefault(require("@babel/runtime-corejs3/core-js-stable/instance/map"));

var _objectWithoutProperties2 = _interopRequireDefault(require("@babel/runtime-corejs3/helpers/objectWithoutProperties"));

var _react = _interopRequireWildcard(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _KakaoMap = require("../KakaoMap");

var _Marker = require("../Marker");

var _server = _interopRequireDefault(require("react-dom/server"));

var _CustomgOverlayContainer = _interopRequireDefault(require("../CustomgOverlayContainer"));

function ownKeys(object, enumerableOnly) { var keys = (0, _keys.default)(object); if (_getOwnPropertySymbols.default) { var symbols = (0, _getOwnPropertySymbols.default)(object); if (enumerableOnly) symbols = (0, _filter.default)(symbols).call(symbols, function (sym) { return (0, _getOwnPropertyDescriptor.default)(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { var _context; (0, _forEach.default)(_context = ownKeys(source, true)).call(_context, function (key) { (0, _defineProperty3.default)(target, key, source[key]); }); } else if (_getOwnPropertyDescriptors.default) { (0, _defineProperties.default)(target, (0, _getOwnPropertyDescriptors.default)(source)); } else { var _context2; (0, _forEach.default)(_context2 = ownKeys(source)).call(_context2, function (key) { (0, _defineProperty2.default)(target, key, (0, _getOwnPropertyDescriptor.default)(source, key)); }); } } return target; }

CustomOverlay.propTypes = {
  content: _propTypes.default.object.isRequired,
  lat: _propTypes.default.number,
  lng: _propTypes.default.number
};

function CustomOverlay(_ref) {
  var content = _ref.content,
      lat = _ref.lat,
      lng = _ref.lng,
      restOptions = (0, _objectWithoutProperties2.default)(_ref, ["content", "lat", "lng"]);

  var _useContext = (0, _react.useContext)(_KakaoMap.KakaoMapContext),
      kakaoMapObj = _useContext.kakaoMapObj,
      map = (0, _map.default)(_useContext);

  var _useContext2 = (0, _react.useContext)(_Marker.MarkerContext),
      marker = _useContext2.marker,
      markerHeight = _useContext2.height;

  var getPosition = (0, _react.useCallback)(function (marker) {
    return {
      overlayLat: marker ? marker.getPosition().getLat() : lat,
      overlayLng: marker ? marker.getPosition().getLng() : lng
    };
  }, [marker]);
  var getOverlayContent = (0, _react.useCallback)(function (marker) {
    return marker ? _server.default.renderToString(_react.default.createElement(_CustomgOverlayContainer.default, (0, _extends2.default)({
      content: content
    }, {
      bottom: "".concat(markerHeight, "px")
    }))) : _server.default.renderToString(content);
  }, [marker]);
  var getYAnchor = (0, _react.useCallback)(function (marker) {
    return marker ? 1 : 0.5;
  }, [marker]);
  var overlayState = (0, _react.useMemo)(function () {
    return {
      position: getPosition(marker),
      content: getOverlayContent(marker),
      yAnchor: getYAnchor(marker)
    };
  }, [marker]);
  (0, _react.useEffect)(function () {
    if (!map || !overlayState) return;
    var position = overlayState.position,
        content = overlayState.content,
        yAnchor = overlayState.yAnchor;
    var customOverlay = new kakaoMapObj.maps.CustomOverlay(_objectSpread({
      position: new kakaoMapObj.maps.LatLng(position.overlayLat, position.overlayLng),
      content: content,
      yAnchor: yAnchor
    }, restOptions));
    customOverlay.setMap(map);
    return function () {
      return customOverlay.setMap(null);
    };
  }, [map, overlayState]);
  return null;
}

;